"""
check_dsinfo
============
A simple utility to check configuration of Mirantis Container Runtime or the docker engine by comparing the output of `docker info` to a whitelist. 

Author: Nathan Jones
Email: njones@mirantis.com
============
docker_info_whitelist.yaml

This YAML file serves as a whitelist for Docker configurations. It contains known and 
accepted configurations for Docker environments. Use this file in conjunction with 
'check_dsinfo.py' to verify Docker setup against a set of pre-approved configurations.

Usage:
- Edit this file to add or remove configurations as needed.
- Add expected configuration to the relevant section so they don't display in the output of 'check_dsinfo.py'
- Comment out configurations which are red flags rather than removing.
- Uncomment to re-enable previously disabled configurations.
- The script 'check_dsinfo.py' checks Docker info against this whitelist.
"""

# Client:
#   Context:    default
#   Debug Mode: false
#   Plugins:
#     buildx: Docker Buildx (Docker Inc.)
#       Version:  v0.12.0-rc1-19-g92006ee1-docker
#       Path:     /usr/libexec/docker/cli-plugins/docker-buildx
Client:
  - Mirantis Container Runtime
  - Version: 20.10.12
  - API version: 1.41
  - Go version: go1.17.11
  - Git commit: 
  - Built: Tue Jun 21 14:34:23 2022
  - OS/Arch: linux/amd64
  - Experimental: true

# Server:
#   Containers: 107
#     Running: 57
#     Paused: 0
#     Stopped: 50
#   Containers: 5
#     Running: 0
#     Paused: 0
#     Stopped: 5
#   Images: 196
#   Images: 3
Server:
  - Mirantis Container Runtime (this node is not a swarm manager - check license status on a manager node)
  - Engine:
    - Version: 20.10.13
    - API version: 1.41 (minimum version 1.12)
    - Go version: go1.17.13m1
    - Git commit: 6220616
    - Built: Thu Aug 11 15:33:39 2022
    - OS/Arch: linux/amd64
    - Experimental: false
  - containerd:
    - Version: 1.6.36
    - GitCommit: 88c3d9bc5b5a193f40b7c14fa996d23532d6f956
  - runc:
    - Version: 1.6.36
    - GitCommit: v1.1.13-m1-0-gf4d99b8
  - docker-init:
    - Version: 0.19.0
    - GitCommit: de40ad0

Server Version:
  - 20.10.13
  - 23.0.15
Storage Driver:
  - overlay2
#   Backing Filesystem: extfs
#   Backing Filesystem: xfs
#   Supports d_type: true
#   Using metacopy: false
#   Native Overlay Diff: true
#   userxattr: false
Logging Driver:
  - json-file
Cgroup Driver:
  - cgroupfs
  - systemd
# Cgroup Version: 1
# Cgroup Version: 2
# Plugins:
#   Volume: local
#   Network: bridge host ipvlan macvlan null overlay
#   Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslog
Swarm:
  - active
  - inactive
#   NodeID: 
#   Is Manager: false
#   Node Address: 
#   Manager Addresses:
Runtimes:
  - runc
  - io.containerd.runc.v2
  - io.containerd.runtime.v1.linux
Default Runtime:
  - runc
Init Binary:
  - docker-init
#   Version:          0.19.0
#   GitCommit:        de40ad0
containerd version:
  - 88c3d9bc5b5a193f40b7c14fa996d23532d6f956
#   Version:          1.6.36
#   GitCommit:        88c3d9bc5b5a193f40b7c14fa996d23532d6f956
runc version:
  - v1.1.13-m1-0-gf4d99b8
#   Version:          1.6.36
#   GitCommit:        v1.1.13-m1-0-gf4d99b8
docker-init version:
  - de40ad0
Security Options:
  - seccomp
  - selinux
  - apparmor
#   Profile: default
#   Profile: builtin
#   cgroupns
Kernel Version:
  - 4.18.0-477.75.1.el8_8.x86_64
  - 6.8.0-49-generic
Operating System:
  - Linux
  - Windows
  - Ubuntu 24.04.1 LTS
  - Red Hat Enterprise Linux 8.8 (Ootpa)
OSType:
  - linux
Architecture:
  - x86_64
  - aarch64
CPUs: []
Total Memory: []
Name: []
ID: []
Docker Root Dir:
  - /var/lib/docker
Debug Mode:
  - false
Registry Config:
  - https://index.docker.io/v1/
Labels:
  - com.docker.security.seccomp=enabled
  - com.docker.security.selinux=enabled
  - com.docker.content-trust.mode=disabled
  - com.docker.security.apparmor=enabled
Experimental:
#  - false
  - true
Insecure Registries:
  - 127.0.0.0/8
Live Restore Enabled:
  - false
Product License:
#  - this node is not a swarm manager - check license status on a manager node
  - Unlicensed - not for production workloads

# These were part of the original whitelist but not explicitly in the Docker info outputs:
API Version: []
HTTP Proxy: []
HTTPS Proxy: []
No Proxy: []
Experimental Build: []
BuildKit: []
Registry Mirrors: []
Experimental Features: []
Default Address Pools: []
